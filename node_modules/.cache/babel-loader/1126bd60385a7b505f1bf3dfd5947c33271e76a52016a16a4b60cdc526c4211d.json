{"ast":null,"code":"import axios from \"axios\";\n\n// Set up base URL for API calls\nconst API_URL = \"http://localhost:5000/api\";\n\n// Axios instance to handle auth tokens and API requests\nconst api = axios.create({\n  baseURL: API_URL\n});\n\n// Add a request interceptor to add token in headers for authenticated requests\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem(\"authToken\");\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\n\n// Error handler to catch and handle API errors globally\nconst handleApiError = error => {\n  if (error.response) {\n    // Request made and server responded with a status other than 2xx\n    console.error('API Error:', error.response.data);\n    return error.response.data.message || 'Something went wrong!';\n  } else if (error.request) {\n    // Request was made but no response was received\n    console.error('Network Error:', error.request);\n    return 'Network error. Please try again later.';\n  } else {\n    // Something else happened\n    console.error('Error:', error.message);\n    return 'An unexpected error occurred.';\n  }\n};\n\n// API functions\nexport const createUser = async userData => {\n  try {\n    const response = await api.post(\"/auth/signup\", userData);\n    return response.data; // Return response data for further use (e.g., token)\n  } catch (error) {\n    throw new Error(handleApiError(error)); // Throw a custom error message\n  }\n};\nexport const loginUser = async credentials => {\n  try {\n    const response = await api.post(\"/auth/login\", credentials);\n    return response.data; // Return response data (e.g., token)\n  } catch (error) {\n    throw new Error(handleApiError(error));\n  }\n};\nexport const createProduct = async productData => {\n  try {\n    const response = await api.post(\"/cars\", productData);\n    return response.data;\n  } catch (error) {\n    throw new Error(handleApiError(error));\n  }\n};\nexport const getUserProducts = async () => {\n  try {\n    const response = await api.get(\"/cars\");\n    return response.data;\n  } catch (error) {\n    throw new Error(handleApiError(error));\n  }\n};\nexport const getProduct = async id => {\n  try {\n    const response = await api.get(`/cars/${id}`);\n    return response.data;\n  } catch (error) {\n    throw new Error(handleApiError(error));\n  }\n};\nexport const updateProduct = async (id, productData) => {\n  try {\n    const response = await api.put(`/cars/${id}`, productData);\n    return response.data;\n  } catch (error) {\n    throw new Error(handleApiError(error));\n  }\n};\nexport const deleteProduct = async id => {\n  try {\n    const response = await api.delete(`/cars/${id}`);\n    return response.data;\n  } catch (error) {\n    throw new Error(handleApiError(error));\n  }\n};\nexport const searchProducts = async query => {\n  try {\n    const response = await api.get(`/cars/search?q=${query}`);\n    return response.data;\n  } catch (error) {\n    throw new Error(handleApiError(error));\n  }\n};","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject","handleApiError","response","console","data","message","createUser","userData","post","Error","loginUser","credentials","createProduct","productData","getUserProducts","get","getProduct","id","updateProduct","put","deleteProduct","delete","searchProducts","query"],"sources":["D:/MY PROJECTS/car-management/client/src/services/api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\n// Set up base URL for API calls\r\nconst API_URL = \"http://localhost:5000/api\";\r\n\r\n// Axios instance to handle auth tokens and API requests\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n});\r\n\r\n// Add a request interceptor to add token in headers for authenticated requests\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem(\"authToken\");\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\n// Error handler to catch and handle API errors globally\r\nconst handleApiError = (error) => {\r\n  if (error.response) {\r\n    // Request made and server responded with a status other than 2xx\r\n    console.error('API Error:', error.response.data);\r\n    return error.response.data.message || 'Something went wrong!';\r\n  } else if (error.request) {\r\n    // Request was made but no response was received\r\n    console.error('Network Error:', error.request);\r\n    return 'Network error. Please try again later.';\r\n  } else {\r\n    // Something else happened\r\n    console.error('Error:', error.message);\r\n    return 'An unexpected error occurred.';\r\n  }\r\n};\r\n\r\n// API functions\r\nexport const createUser = async (userData) => {\r\n  try {\r\n    const response = await api.post(\"/auth/signup\", userData);\r\n    return response.data; // Return response data for further use (e.g., token)\r\n  } catch (error) {\r\n    throw new Error(handleApiError(error)); // Throw a custom error message\r\n  }\r\n};\r\n\r\nexport const loginUser = async (credentials) => {\r\n  try {\r\n    const response = await api.post(\"/auth/login\", credentials);\r\n    return response.data; // Return response data (e.g., token)\r\n  } catch (error) {\r\n    throw new Error(handleApiError(error));\r\n  }\r\n};\r\n\r\nexport const createProduct = async (productData) => {\r\n  try {\r\n    const response = await api.post(\"/cars\", productData);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error(handleApiError(error));\r\n  }\r\n};\r\n\r\nexport const getUserProducts = async () => {\r\n  try {\r\n    const response = await api.get(\"/cars\");\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error(handleApiError(error));\r\n  }\r\n};\r\n\r\nexport const getProduct = async (id) => {\r\n  try {\r\n    const response = await api.get(`/cars/${id}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error(handleApiError(error));\r\n  }\r\n};\r\n\r\nexport const updateProduct = async (id, productData) => {\r\n  try {\r\n    const response = await api.put(`/cars/${id}`, productData);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error(handleApiError(error));\r\n  }\r\n};\r\n\r\nexport const deleteProduct = async (id) => {\r\n  try {\r\n    const response = await api.delete(`/cars/${id}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error(handleApiError(error));\r\n  }\r\n};\r\n\r\nexport const searchProducts = async (query) => {\r\n  try {\r\n    const response = await api.get(`/cars/search?q=${query}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error(handleApiError(error));\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}