{"ast":null,"code":"import axios from\"axios\";// Set up base URL for API calls\nconst API_URL=\"http://localhost:5000/api\";// Axios instance to handle auth tokens and API requests\nconst api=axios.create({baseURL:API_URL});// Add a request interceptor to add token in headers for authenticated requests\napi.interceptors.request.use(config=>{const token=localStorage.getItem(\"authToken\");if(token){config.headers.Authorization=`Bearer ${token}`;}return config;},error=>Promise.reject(error));// Error handler to catch and handle API errors globally\nconst handleApiError=error=>{if(error.response){// Request made and server responded with a status other than 2xx\nconsole.error('API Error:',error.response.data);return error.response.data.message||'Something went wrong!';}else if(error.request){// Request was made but no response was received\nconsole.error('Network Error:',error.request);return'Network error. Please try again later.';}else{// Something else happened\nconsole.error('Error:',error.message);return'An unexpected error occurred.';}};// API functions\nexport const createUser=async userData=>{try{const response=await api.post(\"/auth/signup\",userData);return response.data;// Return response data for further use (e.g., token)\n}catch(error){throw new Error(handleApiError(error));// Throw a custom error message\n}};export const loginUser=async credentials=>{try{const response=await api.post(\"/auth/login\",credentials);return response.data;// Return response data (e.g., token)\n}catch(error){throw new Error(handleApiError(error));}};export const createProduct=async productData=>{try{const response=await api.post(\"/cars\",productData);return response.data;}catch(error){throw new Error(handleApiError(error));}};export const getUserProducts=async()=>{try{const response=await api.get(\"/cars\");return response.data;}catch(error){throw new Error(handleApiError(error));}};export const getProduct=async id=>{try{const response=await api.get(`/cars/${id}`);return response.data;}catch(error){throw new Error(handleApiError(error));}};export const updateProduct=async(id,productData)=>{try{const response=await api.put(`/cars/${id}`,productData);return response.data;}catch(error){throw new Error(handleApiError(error));}};export const deleteProduct=async id=>{try{const response=await api.delete(`/cars/${id}`);return response.data;}catch(error){throw new Error(handleApiError(error));}};export const searchProducts=async query=>{try{const response=await api.get(`/cars/search?q=${query}`);return response.data;}catch(error){throw new Error(handleApiError(error));}};","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject","handleApiError","response","console","data","message","createUser","userData","post","Error","loginUser","credentials","createProduct","productData","getUserProducts","get","getProduct","id","updateProduct","put","deleteProduct","delete","searchProducts","query"],"sources":["D:/MY PROJECTS/car-management/client/src/services/api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\n// Set up base URL for API calls\r\nconst API_URL = \"http://localhost:5000/api\";\r\n\r\n// Axios instance to handle auth tokens and API requests\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n});\r\n\r\n// Add a request interceptor to add token in headers for authenticated requests\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem(\"authToken\");\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\n// Error handler to catch and handle API errors globally\r\nconst handleApiError = (error) => {\r\n  if (error.response) {\r\n    // Request made and server responded with a status other than 2xx\r\n    console.error('API Error:', error.response.data);\r\n    return error.response.data.message || 'Something went wrong!';\r\n  } else if (error.request) {\r\n    // Request was made but no response was received\r\n    console.error('Network Error:', error.request);\r\n    return 'Network error. Please try again later.';\r\n  } else {\r\n    // Something else happened\r\n    console.error('Error:', error.message);\r\n    return 'An unexpected error occurred.';\r\n  }\r\n};\r\n\r\n// API functions\r\nexport const createUser = async (userData) => {\r\n  try {\r\n    const response = await api.post(\"/auth/signup\", userData);\r\n    return response.data; // Return response data for further use (e.g., token)\r\n  } catch (error) {\r\n    throw new Error(handleApiError(error)); // Throw a custom error message\r\n  }\r\n};\r\n\r\nexport const loginUser = async (credentials) => {\r\n  try {\r\n    const response = await api.post(\"/auth/login\", credentials);\r\n    return response.data; // Return response data (e.g., token)\r\n  } catch (error) {\r\n    throw new Error(handleApiError(error));\r\n  }\r\n};\r\n\r\nexport const createProduct = async (productData) => {\r\n  try {\r\n    const response = await api.post(\"/cars\", productData);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error(handleApiError(error));\r\n  }\r\n};\r\n\r\nexport const getUserProducts = async () => {\r\n  try {\r\n    const response = await api.get(\"/cars\");\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error(handleApiError(error));\r\n  }\r\n};\r\n\r\nexport const getProduct = async (id) => {\r\n  try {\r\n    const response = await api.get(`/cars/${id}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error(handleApiError(error));\r\n  }\r\n};\r\n\r\nexport const updateProduct = async (id, productData) => {\r\n  try {\r\n    const response = await api.put(`/cars/${id}`, productData);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error(handleApiError(error));\r\n  }\r\n};\r\n\r\nexport const deleteProduct = async (id) => {\r\n  try {\r\n    const response = await api.delete(`/cars/${id}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error(handleApiError(error));\r\n  }\r\n};\r\n\r\nexport const searchProducts = async (query) => {\r\n  try {\r\n    const response = await api.get(`/cars/search?q=${query}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error(handleApiError(error));\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}